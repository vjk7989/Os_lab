import java.util.concurrent.Semaphore;

class Pipe<E> {
  private E e;

  private final Semaphore read = new Semaphore(0);
  private final Semaphore write = new Semaphore(1);

  public final void put(final E e) {
    try {
		write.acquire();
	} catch (InterruptedException e1) {
		// TODO Auto-generated catch block
		e1.printStackTrace();
	}
    this.e = e;
    read.release();
  }

  public final E take() {
    try {
		read.acquire();
	} catch (InterruptedException e1) {
		// TODO Auto-generated catch block
		e1.printStackTrace();
	}
    E e = this.e;
    write.release();
    return e;
  }
}
public class L66{
	public static void main(String[] args) {
		Pipe<Integer> p1 = new Pipe<>();
		p1.put(212);
		System.out.println(p1.take());
	}
}
